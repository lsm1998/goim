// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logic.proto

// protoc -I logic logic/logic.proto --go_out=plugins=grpc:logic

package logic

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetAddrReq struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAddrReq) Reset()         { *m = GetAddrReq{} }
func (m *GetAddrReq) String() string { return proto.CompactTextString(m) }
func (*GetAddrReq) ProtoMessage()    {}
func (*GetAddrReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{0}
}

func (m *GetAddrReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddrReq.Unmarshal(m, b)
}
func (m *GetAddrReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddrReq.Marshal(b, m, deterministic)
}
func (m *GetAddrReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddrReq.Merge(m, src)
}
func (m *GetAddrReq) XXX_Size() int {
	return xxx_messageInfo_GetAddrReq.Size(m)
}
func (m *GetAddrReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddrReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddrReq proto.InternalMessageInfo

func (m *GetAddrReq) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type GetAddrReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAddrReply) Reset()         { *m = GetAddrReply{} }
func (m *GetAddrReply) String() string { return proto.CompactTextString(m) }
func (*GetAddrReply) ProtoMessage()    {}
func (*GetAddrReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_60207fea82c31ca8, []int{1}
}

func (m *GetAddrReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddrReply.Unmarshal(m, b)
}
func (m *GetAddrReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddrReply.Marshal(b, m, deterministic)
}
func (m *GetAddrReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddrReply.Merge(m, src)
}
func (m *GetAddrReply) XXX_Size() int {
	return xxx_messageInfo_GetAddrReply.Size(m)
}
func (m *GetAddrReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddrReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddrReply proto.InternalMessageInfo

func (m *GetAddrReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetAddrReply) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func init() {
	proto.RegisterType((*GetAddrReq)(nil), "logic.GetAddrReq")
	proto.RegisterType((*GetAddrReply)(nil), "logic.GetAddrReply")
}

func init() { proto.RegisterFile("logic.proto", fileDescriptor_60207fea82c31ca8) }

var fileDescriptor_60207fea82c31ca8 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc9, 0x4f, 0xcf,
	0x4c, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0xf4, 0xb9, 0xb8, 0xdc,
	0x53, 0x4b, 0x1c, 0x53, 0x52, 0x8a, 0x82, 0x52, 0x0b, 0x85, 0x14, 0xb9, 0x78, 0x8a, 0x53, 0x8b,
	0xca, 0x32, 0x93, 0x53, 0xe3, 0xf3, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83,
	0xb8, 0xa1, 0x62, 0x7e, 0x89, 0xb9, 0xa9, 0x4a, 0x66, 0x5c, 0x3c, 0x70, 0x0d, 0x05, 0x39, 0x95,
	0x42, 0x42, 0x5c, 0x2c, 0xc9, 0xf9, 0x29, 0x10, 0xa5, 0xac, 0x41, 0x60, 0x36, 0x48, 0x2c, 0x31,
	0x25, 0xa5, 0x48, 0x82, 0x09, 0xac, 0x1d, 0xcc, 0x36, 0x72, 0xe6, 0xe2, 0x01, 0xdb, 0x18, 0x0c,
	0x31, 0x4b, 0xc8, 0x98, 0x8b, 0x1d, 0x6a, 0x8e, 0x90, 0xa0, 0x1e, 0xc4, 0x61, 0x08, 0x87, 0x48,
	0x09, 0xa3, 0x0b, 0x15, 0xe4, 0x54, 0x2a, 0x31, 0x24, 0xb1, 0x81, 0xdd, 0x6e, 0x0c, 0x08, 0x00,
	0x00, 0xff, 0xff, 0xde, 0x94, 0x2a, 0xf2, 0xca, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogicServiceClient is the client API for LogicService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogicServiceClient interface {
	GetAddr(ctx context.Context, in *GetAddrReq, opts ...grpc.CallOption) (*GetAddrReply, error)
}

type logicServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogicServiceClient(cc *grpc.ClientConn) LogicServiceClient {
	return &logicServiceClient{cc}
}

func (c *logicServiceClient) GetAddr(ctx context.Context, in *GetAddrReq, opts ...grpc.CallOption) (*GetAddrReply, error) {
	out := new(GetAddrReply)
	err := c.cc.Invoke(ctx, "/logic.logicService/GetAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogicServiceServer is the server API for LogicService service.
type LogicServiceServer interface {
	GetAddr(context.Context, *GetAddrReq) (*GetAddrReply, error)
}

// UnimplementedLogicServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLogicServiceServer struct {
}

func (*UnimplementedLogicServiceServer) GetAddr(ctx context.Context, req *GetAddrReq) (*GetAddrReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddr not implemented")
}

func RegisterLogicServiceServer(s *grpc.Server, srv LogicServiceServer) {
	s.RegisterService(&_LogicService_serviceDesc, srv)
}

func _LogicService_GetAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddrReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServiceServer).GetAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.logicService/GetAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServiceServer).GetAddr(ctx, req.(*GetAddrReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogicService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logic.logicService",
	HandlerType: (*LogicServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAddr",
			Handler:    _LogicService_GetAddr_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logic.proto",
}
